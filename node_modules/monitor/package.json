{
  "name": "monitor",
  "description": "Runtime monitoring for node.js applications",
  "version": "0.4.5",
  "main": "./lib/index.js",
  "author": {
    "name": "Loren West",
    "email": "open_source@lorenwest.com",
    "url": "https://github.com/lorenwest"
  },
  "homepage": "http://lorenwest.github.com/monitor/",
  "repository": {
    "type": "git",
    "url": "git://github.com/lorenwest/monitor.git"
  },
  "bugs": {
    "url": "https://github.com/loren/monitor/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/lorenwest/monitor/blob/master/LICENSE"
    }
  ],
  "dependencies": {
    "config": ">=0.4.17 <0.5.0",
    "cron": ">=0.1.3 <0.2.0",
    "backbone": ">=0.9.2 <0.10.0",
    "underscore": ">=1.4.2 <1.5.0",
    "socket.io-client": ">=0.9.11 <0.10.0",
    "socket.io": ">=0.9.10 <0.10.0"
  },
  "devDependencies": {
    "grunt": ">=0.3.17"
  },
  "engines": {
    "node": ">= 0.6.0"
  },
  "scripts": {
    "test": "grunt test",
    "start": "node server"
  },
  "readme": "Monitor\n=======\n\n[![Build Status](https://secure.travis-ci.org/lorenwest/monitor.png?branch=master)](https://travis-ci.org/lorenwest/monitor)\n\nRemote monitoring for Node.js applications\n\nIntroduction\n------------\n\nThis package provides a foundation for monitoring and controlling remote\nnode.js applications.\n\nIt introduces the concept of a [Probe](http://lorenwest.github.com/monitor/doc/classes/Probe.html) -\na small software component capable of exposing and controlling state within a\nrunning node.js server.\n\nProbes are written as\n[Backbone](http://documentcloud.github.com/backbone) models, and\nremain dormant in your process until instantiated from remote monitors.\n\nFrom the monitoring process, a [Monitor](http://lorenwest.github.com/monitor/doc/classes/Monitor.html) class\nis provided to connect with a remote probe.\n\nThis package is used for writing and embedding probes into your app server,\nand for writing custom clients for inspecting and controlling these probes.\nA companion package  -\n[Node Monitor](http://lorenwest.github.com/node_monitor) - provides a user interface\nfor building real time monitor dashboards.\n\nQuick Start\n-----------\n\n**Install using npm**\n\n    $ npm install monitor\n\n**Start the monitor service (standalone)**\n\nNormally you'll include this package into your own application server, but you can\nrun as a standalone application as well.\n\n    $ npm start monitor\n\n**Observe a probe from a remote process**\n\nIn this example we're using a REPL console to connect with the\nbuilt-in [Process](http://http://lorenwest.github.com/monitor/doc/classes/Process.html) probe.\n\nOpen a REPL console from another terminal\n\n    $ node\n\nCreate a monitor for the Process probe\n\n    > var Monitor = require('monitor');\n    > var processMonitor = new Monitor({server:'localhost', probeClass: 'Process'});\n\nConnect with the probe, and view the properties\n\n    > processMonitor.connect();\n    > processMonitor.toJSON();\n\nThe monitor is a Backbone model, so you can watch for changes\n\n    > var showFreeMem = function(){console.log(processMonitor.get('freemem'))};\n    > processMonitor.on('change', showFreeMem);\n\nSee Also\n--------\n\n* [API-Docs](http://lorenwest.github.com/monitor/doc/index.html) Monitor internal documentation\n* [Node Monitor](http://lorenwest.github.com/node_monitor) Companion webapp for building real time monitor dashboards\n\nLicense\n-------\n\nReleased under the Apache License 2.0\n\nSee [LICENSE](https://github.com/lorenwest/monitor/blob/master/LICENSE) file.\n\nCopyright (c) 2012 Loren West\n",
  "_id": "monitor@0.4.5",
  "dist": {
    "shasum": "bf8be6e2e02668653b9b8ec84053f462de5c1a3d"
  },
  "_from": "monitor"
}
